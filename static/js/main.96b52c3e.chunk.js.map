{"version":3,"sources":["com/PaginationButton/PaginationButton.js","com/Pagination/Pagination.js","com/Select/Select.js","App.js","index.js"],"names":["PaginationButton","simbol","page","onPageChange","type","className","onClick","event","preventDefault","aria-hidden","defaultProps","Pagination","total","perPage","maxPages","Math","ceil","getPageValue","pageNum","toString","classNames","disabled","Array","from","length","_","i","filter","map","active","key","Select","selectValues","onPerPageChange","name","value","onChange","target","App","state","currentPage","setState","newPerPage","makeInfo","lastItem","this","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96b52c3e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const PaginationButton = ({ simbol, page, onPageChange }) => (\n  <button\n    type=\"button\"\n    className=\"page-link\"\n    onClick={(event) => {\n      event.preventDefault();\n\n      onPageChange(+page);\n    }}\n  >\n    <span aria-hidden=\"true\">{simbol || page}</span>\n  </button>\n);\n\nPaginationButton.propTypes = {\n  simbol: PropTypes.string,\n  page: PropTypes.string.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nPaginationButton.defaultProps = {\n  simbol: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { PaginationButton } from '../PaginationButton';\n\nexport const Pagination = ({ total, perPage, page, onPageChange }) => {\n  const maxPages = Math.ceil(total / perPage);\n  const getPageValue = pageNum => ((\n    (pageNum === page - 2 && pageNum !== 1)\n      || (pageNum === page + 2 && pageNum !== maxPages)\n  )\n    ? '...'\n    : pageNum.toString());\n\n  return (\n    <nav className=\"p-2 m-auto\">\n      <ul className=\"pagination\">\n        <li\n          className={classNames('page-item', {\n            disabled: page === 1,\n          })}\n        >\n          <PaginationButton\n            simbol=\"&laquo;\"\n            page={`${page - 1}`}\n            onPageChange={onPageChange}\n          />\n        </li>\n\n        {Array\n          .from({ length: maxPages }, (_, i) => i + 1)\n          .filter(pageNum => pageNum === 1\n            || pageNum === maxPages\n            || (pageNum >= page - 2 && pageNum <= page + 2))\n          .map(pageNum => (\n            <li\n              className={classNames('page-item', {\n                active: pageNum === page,\n                disabled: getPageValue(pageNum) === '...',\n              })}\n              key={pageNum}\n            >\n              <PaginationButton\n                page={getPageValue(pageNum)}\n                onPageChange={onPageChange}\n              />\n            </li>\n          ))\n        }\n\n        <li\n          className={classNames('page-item', {\n            disabled: page === maxPages,\n          })}\n        >\n          <PaginationButton\n            simbol=\"&raquo;\"\n            page={`${page + 1}`}\n            onPageChange={onPageChange}\n          />\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Select = ({ selectValues, onPerPageChange, perPage }) => (\n  <select\n    name=\"page\"\n    className=\"p-2 m-auto\"\n    value={perPage}\n    onChange={({ target }) => onPerPageChange(+target.value)}\n  >\n    {selectValues.map(value => (\n      <option\n        key={value}\n        value={value}\n      >\n        {value}\n      </option>\n    ))\n    }\n  </select>\n);\n\nSelect.propTypes = {\n  selectValues: PropTypes.arrayOf(\n    PropTypes.number.isRequired,\n  ).isRequired,\n  onPerPageChange: PropTypes.func.isRequired,\n  perPage: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\nimport { Pagination } from './com/Pagination';\nimport { Select } from './com/Select/Select';\n\nclass App extends React.PureComponent {\n  selectValues = [3, 5, 10, 20];\n\n  state = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n  }\n\n  onPageChange = (currentPage) => {\n    this.setState({\n      page: currentPage,\n    });\n  }\n\n  onPerPageChange = (newPerPage) => {\n    this.setState({\n      perPage: newPerPage,\n      page: 1,\n    });\n  }\n\n  makeInfo = () => {\n    const { total, perPage, page } = this.state;\n    const firstItem = ((page * perPage) - perPage) + 1;\n    const lastItem = (page * perPage) > total ? total : page * perPage;\n\n    return `${firstItem} - ${lastItem} of ${total}`;\n  }\n\n  render() {\n    const {\n      state: { page, total, perPage },\n      onPageChange,\n      onPerPageChange,\n      makeInfo,\n      selectValues,\n    } = this;\n\n    return (\n      <div className=\"d-flex flex-column App\">\n        <Select\n          selectValues={selectValues}\n          onPerPageChange={onPerPageChange}\n          perPage={perPage}\n        />\n        <span className=\"p-2\">{makeInfo()}</span>\n        <Pagination\n          total={total}\n          perPage={perPage}\n          page={page}\n          onPageChange={onPageChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}